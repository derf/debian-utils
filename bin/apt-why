#!/usr/bin/env perl
## Copyright Â© 2008-2009 by Daniel Friesel <derf@derf.homelinux.org>
## License: WTFPL <http://sam.zoy.org/wtfpl>
use strict;
use warnings;
use 5.010;
use AptPkg::Cache;
use Getopt::Long;

my $cache = AptPkg::Cache->new;
my $max_depth = 5;
my $all = 0;
my $tabwidth;
my $tabsign = "\t";
my @deptypes = qw/Depends Recommends Suggests/;
GetOptions(
	'all!'       => \$all,
	'deptype=s'  => sub {@deptypes = split(/,/, $_[1])},
	'depth=i'    => \$max_depth,
	'tabwidth=i' => \$tabwidth,
	'h|?|help'   => \&usage,
);
my $packagename = shift or die('No packagename given');
my @known;

sub usage {
	exec('perldoc', '-F', $0) or die("See perldoc -F $0");
}

sub revdeps {
	my $name = shift;
	my $package = $cache->{$name};
	my @return;
	my $rdeps = $package->{RevDependsList};

	foreach my $dependency (@{$rdeps}) {
		if (
			not $dependency->{ParentPkg}{Name} ~~ @known
			and ($all or $cache->{$dependency->{ParentPkg}{Name}}->{CurrentState} eq 'Installed')
			and "$dependency->{DepType}" ~~ @deptypes
		) {
			push(@return, $dependency->{ParentPkg}{Name});
		}
	}

	push(@known, @return);
	return(@return);
}

sub recurse {
	my $name = shift;
	my $depth = (shift) + 1;

	printf("%s%s\n", $tabsign x ($depth-1), $name);

	if ($depth >= $max_depth) {
		return;
	}

	foreach (revdeps($name)) {
		recurse($_, $depth);
	}

	return;
}

if (defined $tabwidth) {
	$tabsign = ' ' x $tabwidth;
}

if (not defined $cache->{$packagename}) {
	print STDERR "No such package: $packagename\n";
	exit(1);
}

if ($cache->{$packagename}->{Flags} =~ /Essential/) {
	print "Essential: Yes\n";
}

recurse($packagename, 0);

__END__

=head1 NAME

apt-why - filtered reverse dependency displayer using AptPkg::Cache

=head1 SYNOPSIS

B<apt-why> [ I<options> ] I<package>

=head1 DESCRIPTION

B<apt-why> recursively displays I<package>'s reverse dependency, thus
showing which installed packages require I<package> on the system.

=head1 OPTIONS

=over

=item B<--all>

Consider all packages, not just installed ones

=item B<--depth>=I<integer> (default: 5)

Specify the maximum recursion depth

=item B<--deptype>=I<types>

Only show reverse dependency which mach the specified I<types> (comma separated list).
Right now, possible types are Depends, Suggests, Recommends.

=item B<--tabwidth>=I<i>

Indent each recursion level with I<i> spaces (by default: one tab)

=back

=head1 AUTHOR

Daniel Friesel E<lt>derf@derf.homelinux.orgE<gt>

=head1 LICENSE

  0. You just DO WHAT THE FUCK YOU WANT TO.
